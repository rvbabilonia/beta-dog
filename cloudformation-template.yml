AWSTemplateFormatVersion: 2010-09-09
Resources:
  BetaDogExecutionRole:
    Description: Creating service role in IAM for AWS Lambda
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: beta-dog-execution-role
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - 'lambda.amazonaws.com'
                - 'apigateway.amazonaws.com'
            Action: 'sts:AssumeRole'
      Path: /
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess'
        - 'arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs'
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaRole'
      Policies:
        - PolicyName: LambdaDynamoDBPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'dynamodb:PutItem'
                  - 'dynamodb:DeleteItem'
                  - 'dynamodb:GetItem'
                  - 'dynamodb:Scan'
                  - 'dynamodb:Query'
                  - 'dynamodb:UpdateItem'
                Resource:
                  - !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/*'

  BetaDogApi:
    Type: 'AWS::ApiGateway::RestApi'
    Properties:
      Name: 'beta-dog-api'
      Description: 'Beta-Dog Application Programming Interface Gateway'

  V1Resource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !GetAtt BetaDogApi.RootResourceId
      RestApiId: !Ref BetaDogApi
      PathPart: 'v1'

  BetaDogResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !Ref V1Resource
      RestApiId: !Ref BetaDogApi
      PathPart: 'instruments'

  InstrumentsGetMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: 'NONE'
      HttpMethod: 'GET'
      Integration:
        IntegrationHttpMethod: 'GET'
        Type: 'AWS_PROXY'
        Uri: !Sub
          - 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${lambdaArn}/invocations'
          - lambdaArn: !GetAtt InstrumentsFunction.Arn
      ResourceId: !Ref BetaDogResource
      RestApiId: !Ref BetaDogApi

  InstrumentsOptionsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      RestApiId: !Ref BetaDogApi
      ResourceId: !Ref BetaDogResource
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Origin'"
              method.response.header.Access-Control-Allow-Methods: "'POST,OPTIONS'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            ResponseTemplates:
              application/json: ''
        PassthroughBehavior: WHEN_NO_MATCH
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        Type: MOCK
      MethodResponses:
        - StatusCode: 200
          ResponseModels:
            application/json: 'Empty'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Origin: true

  BetaDogApiGatewayDeployment:
    Type: 'AWS::ApiGateway::Deployment'
    DependsOn:
      - 'InstrumentsGetMethod'
    Properties:
      RestApiId: !Ref BetaDogApi
      StageName: 'dev'

  InstrumentsFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Code:
        S3Bucket: beta-dog-functions
        S3Key: beta-dog-1.0.0.zip
      FunctionName: instruments
      Handler: 'nz.org.vincenzo.betadog.handler.ScrapeRequestHandler::handleRequest'
      MemorySize: '512'
      Timeout: '60'
      TracingConfig:
        Mode: Active
      Runtime: java11
      Role: !GetAtt
        - BetaDogExecutionRole
        - Arn

  InstrumentsPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:invokeFunction'
      FunctionName: !GetAtt InstrumentsFunction.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub
        - 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${apiGateway}/*/*'
        - apiGateway: !Ref BetaDogApi
